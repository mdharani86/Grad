---
Description: Set up an Amazon Linux web server
Parameters:
  KeyName:
    Description: The Name of the existing EC2 keypair to enable ssh access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  SSHCIDR: 
    Type: String
    Description: The CIDR block restricting SSH
    MinLength: 9
    #Default: 47.198.201.80/0
     Default: 131.247.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x 
  
Mappings: 
  Region2AMI:
    us-east-1: 
      AMI: ami-0e2ff28bfb72a4e45
    us-west-1:
      AMI:  ami-021bb9f371690f97a
Resources: 
  EC2Instance: 
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nginx: []
          files: 
            /usr/share/nginx/html/index.html:
              content: !Sub |
                <title> Dharani Manian </title>
                <h1> Dharani Manian </h1>
                <p> <strong> Region: </strong> </p>
                <p> ${AWS::Region} </p>
                 
              mode: '000644'
              owner: root
              group: root
          
            
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
              
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} 
                runas=root
              mode: '000400'  
              owner: root
              group: root
                    
          commands: 
            DNSHostName:
              command: |
                echo "<p><strong> Public DNS: </p></strong>" $(curl http://169.254.169.254/latest/meta-data/public-hostname) >> /usr/share/nginx/html/index.html 
                
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'

              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files: 
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
          

              
    Properties:
      ImageId: !FindInMap [Region2AMI, !Ref 'AWS::Region', 'AMI']
      InstanceType: t2.micro
      SecurityGroups: 
      - !Ref WebServerSecurityGroup
      Tags:
      - Key: Name
        Value: amazon linux nginx server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
          
        
  
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows HTTP
      SecurityGroupIngress: 
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
      - CidrIp: !Ref SSHCIDR
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
Outputs:
  WebURL:
    Description: The URL for the web page.
    Value: !Sub 'http://${EC2Instance.PublicIp}'
  PublicDNS: 
    Description: The AWS public DNS for the instance 
    Value: !Sub '${EC2Instance.PublicDnsName}'
  Region:
    Description: The Region.
    Value: !Ref 'AWS::Region'
