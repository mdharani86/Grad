class Solution {
    public int romanToInt(String s) {
        HashMap<String,Integer> symbols = new HashMap<>();
        symbols.put("I",1);
        symbols.put("IV",4);
        symbols.put("V",5);
        symbols.put("IX",9);
        symbols.put("X",10);
        symbols.put("XL",40);
        symbols.put("L",50);
        symbols.put("XC",90);
        symbols.put("C",100);
        symbols.put("CD",400);
        symbols.put("D",500);
        symbols.put("CM",900);
        symbols.put("M",1000);

        int n = s.length();
        int i = 0;
        int currsum = 0;

        while ( i < n) {
            if (i+1 < n && symbols.containsKey(s.substring(i,i+2))){
                currsum+=symbols.get(s.substring(i,i+2));
                i+=1;
            }
            else {
                currsum+=symbols.get(s.substring(i,i+1));
            }
            i+=1;
        }
        
        return currsum;
    }
}
