class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        HashMap<Character,Character> map = new HashMap<>();
        map.put(')','(');
        map.put('}','{');
        map.put(']','[');
        for (int i =0; i<s.length(); i++) {
            if (map.containsKey(s.charAt(i)) && !stack.empty() && stack.peek() == map.get(s.charAt(i))) {
                stack.pop();
            } else if (map.containsKey(s.charAt(i)) && !stack.empty() && stack.peek() != map.get(s.charAt(i))) {
                return false;
            } else if (map.containsKey(s.charAt(i)) && stack.empty()) {
                return false;
            } else if (!map.containsKey(s.charAt(i))) {
                stack.push(s.charAt(i));
            }
        }

        return stack.empty();
    }
}
